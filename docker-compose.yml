version: '3'

services:

  phpfpm:
    container_name: symfony52-example-php
    image: symfony52-example-php
    build:
      context: ./docker-files/dev/php
    env_file:
      - .env.local
    depends_on:
      - postgres
    volumes:
      - .:/app

  nginx:
    container_name: symfony52-example-nginx
    image: symfony52-example-nginx
    build:
      context: docker-files/dev/nginx
    env_file:
      - .env.local
    ports:
      - 80:80
    depends_on:
      - phpfpm
    volumes:
      - .:/app
      - ./var/log/nginx:/var/log/nginx
      - ./docker-files/dev/nginx/default.conf:/etc/nginx/conf.d/default.conf

  postgres:
    container_name: symfony52-example-postgres
    image: symfony52-example-postgres
    build:
      context: docker-files/dev/postgres
    env_file:
      - .env.local
    ports:
      - 5432:5432
    volumes:
      - volume_pgdata:/pgdata

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-13}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ChangeMe}
      POSTGRES_USER: ${POSTGRES_USER:-symfony}
    volumes:
      - db-data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###
volumes:
    volume_pgdata:

###> doctrine/doctrine-bundle ###
  db-data:
###< doctrine/doctrine-bundle ###
